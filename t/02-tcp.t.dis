#!/bin/bin/perl
#
# Copyright (C) 2013 by Lieven Hollevoet

# This test runs tests for the bootloader connecting over TCP

use strict;

use Test::More;

BEGIN { use_ok('Device::Microchip::Bootloader'); }
BEGIN { use_ok('AnyEvent::MockTCPServer', qw/:all/); }

my $done = AnyEvent->condvar;

my $server;

eval {
    $server = AnyEvent::MockTCPServer->new(connections =>
					   [
					    [
					     [ code => sub {ok(1, "Server is waiting")},
					       'server waiting for connection'],
					     [ recv => 'HELLO',
					       'wait for "HELLO"' ],
					     [ code => sub {ok(1, "Received packet from bootloader")}, 
					       'packet received' ],
					     [ sleep => 1,
					       'wait for 1 second'],
					     [ send => 'BYE',
					       'send "BYE"' ],
					    ]
					   ]);
};

plan skip_all => "Failed to create the dummy server: $@" if ($@);

ok($server, "Server object created");

# Determine port to connect to
my ($host, $port) = $server->connect_address;

my $timeout = AnyEvent->timer(after => 20, 
			      cb => sub { $done->send('timeout')});

# Create the Bootloader object
my $loader = Device::Microchip::Bootloader->new(firmware => 't/stim/test.hex', device => $host . ":" . $port, verbose => 4);
ok $loader, 'object created';

if ($loader->program() == 0) {
    $done->send('done');
} else {
    $done->send('error');
}

my $res = $done->recv;

is ($res, 'done', 'TCP test done');


done_testing();
